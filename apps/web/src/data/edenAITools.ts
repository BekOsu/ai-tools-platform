// Comprehensive AI Tools scraped from actual EdenAI platform

export interface EdenAITool {
  id: string;
  name: string;
  description: string;
  category: string;
  subcategory: string;
  icon: string;
  iconColor: string;
  provider: string;
  pricing: "free" | "paid" | "freemium";
  accuracy: number;
  speed: "fast" | "medium" | "slow";
  features: string[];
  useCases: string[];
  inputTypes: string[];
  outputTypes: string[];
  languages?: string[];
  isPopular?: boolean;
  isNew?: boolean;
  apiEndpoint?: string;
  isAsync?: boolean;
}

export const edenAITools: EdenAITool[] = [
  // ===== OUR CUSTOM AI MICROSERVICES =====
  {
    id: "trading-analysis",
    name: "Trading Analysis Service",
    description: "Real-time market data analysis with technical indicators, portfolio tracking, and WebSocket price feeds",
    category: "Trading",
    subcategory: "Analysis",
    icon: "FiTrendingUp",
    iconColor: "text-green-600",
    provider: "Custom (Go)",
    pricing: "free",
    accuracy: 98,
    speed: "fast",
    features: ["Real-time WebSocket feeds", "Technical indicators (RSI, MACD, Bollinger)", "Portfolio tracking", "Risk assessment", "Trading signals"],
    useCases: ["Algorithmic trading", "Portfolio management", "Market analysis", "Risk assessment"],
    inputTypes: ["Symbol", "JSON"],
    outputTypes: ["JSON", "WebSocket"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/trading",
    isAsync: false
  },
  {
    id: "image-processing-ai",
    name: "AI Image Processing",
    description: "Advanced computer vision with face detection, image effects, color analysis, and batch processing",
    category: "Image",
    subcategory: "Processing",
    icon: "FiCamera",
    iconColor: "text-blue-500",
    provider: "Custom (Python + OpenCV)",
    pricing: "free",
    accuracy: 95,
    speed: "medium",
    features: ["Face detection", "Image enhancement", "Color analysis", "Object detection", "Batch processing", "Multiple formats"],
    useCases: ["Photo editing", "Content moderation", "Computer vision", "Image analysis"],
    inputTypes: ["JPG", "PNG", "WebP", "TIFF"],
    outputTypes: ["Image", "JSON"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/image",
    isAsync: true
  },
  {
    id: "text-analysis-nlp",
    name: "Advanced Text Analysis",
    description: "Comprehensive NLP with sentiment analysis, entity recognition, keyword extraction, and text summarization",
    category: "Text",
    subcategory: "NLP",
    icon: "FiType",
    iconColor: "text-purple-500",
    provider: "Custom (Python + spaCy)",
    pricing: "free",
    accuracy: 96,
    speed: "fast",
    features: ["Sentiment analysis", "Named entity recognition", "Keyword extraction", "Text summarization", "Language detection", "Text similarity"],
    useCases: ["Content analysis", "Social media monitoring", "Document processing", "SEO optimization"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["English", "Spanish", "French", "German", "Chinese"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/text",
    isAsync: true
  },
  {
    id: "audio-synthesis-ai",
    name: "AI Audio Synthesis",
    description: "Text-to-speech, music generation, voice cloning, and comprehensive audio processing with PyTorch",
    category: "Audio",
    subcategory: "Synthesis",
    icon: "FiHeadphones",
    iconColor: "text-orange-500",
    provider: "Custom (Python + PyTorch)",
    pricing: "free",
    accuracy: 92,
    speed: "slow",
    features: ["Text-to-speech", "Music generation", "Voice cloning", "Audio effects", "Speech analysis", "Mood detection"],
    useCases: ["Voice assistants", "Music creation", "Podcast production", "Audio branding"],
    inputTypes: ["Text", "Audio"],
    outputTypes: ["MP3", "WAV", "JSON"],
    languages: ["English", "Spanish", "French", "German"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/audio",
    isAsync: true
  },
  {
    id: "resume-builder-ai",
    name: "AI Resume Builder",
    description: "Professional resume generation with multiple templates, AI optimization, and ATS compatibility scoring",
    category: "Document",
    subcategory: "Resume",
    icon: "FiUser",
    iconColor: "text-indigo-500",
    provider: "Custom (Node.js + Puppeteer)",
    pricing: "free",
    accuracy: 94,
    speed: "fast",
    features: ["Multiple templates", "AI optimization", "ATS scoring", "PDF generation", "Batch processing", "Custom themes"],
    useCases: ["Job applications", "Career development", "HR automation", "Professional branding"],
    inputTypes: ["JSON", "Text"],
    outputTypes: ["PDF", "HTML"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/resume",
    isAsync: true
  },
  {
    id: "code-generation-claude",
    name: "AI Code Generation",
    description: "Multi-language code generation, review, and optimization powered by Claude AI with advanced context understanding",
    category: "Text",
    subcategory: "Code",
    icon: "FiCode",
    iconColor: "text-green-400",
    provider: "Custom (Node.js + Claude)",
    pricing: "free",
    accuracy: 97,
    speed: "fast",
    features: ["Multi-language support", "Code review", "Documentation generation", "Refactoring", "Bug fixing", "Context-aware generation"],
    useCases: ["Software development", "Code assistance", "Learning", "Code review", "Documentation"],
    inputTypes: ["Text"],
    outputTypes: ["Code", "JSON"],
    languages: ["Python", "JavaScript", "TypeScript", "Java", "C++", "Go", "Rust", "PHP"],
    isPopular: true,
    isNew: true,
    apiEndpoint: "/api/code",
    isAsync: false
  },

  // ===== CUSTOM CHATBOT & RAG =====
  {
    id: "custom-chatbot-rag",
    name: "Custom Chatbot (RAG)",
    description: "Build intelligent chatbots with Retrieval-Augmented Generation, supporting document uploads and context-aware conversations",
    category: "Text",
    subcategory: "Chatbot",
    icon: "FiMessageSquare",
    iconColor: "text-blue-500",
    provider: "OpenAI, Google, AWS, Azure",
    pricing: "paid",
    accuracy: 95,
    speed: "fast",
    features: ["Document upload", "Conversation management", "Multi-format support", "Context retention", "Project management"],
    useCases: ["Customer support", "Document Q&A", "Knowledge base chat", "Educational assistants"],
    inputTypes: ["Text", "PDF", "Images", "Video", "URLs"],
    outputTypes: ["Text", "JSON"],
    languages: ["English", "Spanish", "French", "German", "Chinese", "Japanese"],
    isPopular: true,
    apiEndpoint: "/chatbot/conversation",
    isAsync: false
  },

  // ===== AUDIO PROCESSING =====
  {
    id: "speech-to-text-async",
    name: "Speech to Text (Async)",
    description: "Convert spoken audio into accurate text with asynchronous processing for long-form content",
    category: "Audio",
    subcategory: "Transcription",
    icon: "FiMic",
    iconColor: "text-green-500",
    provider: "Google, AWS, Azure, OpenAI",
    pricing: "paid",
    accuracy: 97,
    speed: "medium",
    features: ["Long-form processing", "Speaker identification", "Timestamps", "Multiple languages", "Background noise filtering"],
    useCases: ["Podcast transcription", "Meeting notes", "Interview processing", "Call center analysis"],
    inputTypes: ["MP3", "WAV", "FLAC", "M4A"],
    outputTypes: ["Text", "JSON", "SRT"],
    languages: ["English", "Spanish", "French", "German", "Chinese", "Japanese", "Arabic"],
    isPopular: true,
    apiEndpoint: "/audio/speech_to_text_async",
    isAsync: true
  },
  {
    id: "text-to-speech-sync",
    name: "Text to Speech (Sync)",
    description: "Generate natural-sounding speech from text with real-time processing",
    category: "Audio",
    subcategory: "Generation",
    icon: "FiHeadphones",
    iconColor: "text-purple-500",
    provider: "Google, AWS, Azure, OpenAI",
    pricing: "paid",
    accuracy: 94,
    speed: "fast",
    features: ["Natural voices", "Multiple accents", "SSML support", "Speed control", "Voice cloning"],
    useCases: ["Voice assistants", "Accessibility", "E-learning", "Audiobook creation"],
    inputTypes: ["Text"],
    outputTypes: ["MP3", "WAV"],
    languages: ["English", "Spanish", "French", "German", "Chinese", "Japanese"],
    isPopular: true,
    apiEndpoint: "/audio/text_to_speech",
    isAsync: false
  },
  {
    id: "text-to-speech-async",
    name: "Text to Speech (Async)",
    description: "Generate high-quality speech from long text content with asynchronous processing",
    category: "Audio",
    subcategory: "Generation",
    icon: "FiClock",
    iconColor: "text-orange-500",
    provider: "Google, AWS, Azure",
    pricing: "paid",
    accuracy: 96,
    speed: "slow",
    features: ["Long-form content", "High quality voices", "Custom voice training", "Batch processing"],
    useCases: ["Audiobook production", "Long-form content", "Batch voice generation", "Custom voice creation"],
    inputTypes: ["Text", "SSML"],
    outputTypes: ["MP3", "WAV"],
    languages: ["English", "Spanish", "French", "German"],
    apiEndpoint: "/audio/text_to_speech_async",
    isAsync: true
  },

  // ===== TRANSLATION =====
  {
    id: "automatic-translation",
    name: "Automatic Translation",
    description: "Translate text between multiple languages with high accuracy and context preservation",
    category: "Text",
    subcategory: "Translation",
    icon: "FiGlobe",
    iconColor: "text-blue-600",
    provider: "Google, AWS, Azure, DeepL",
    pricing: "paid",
    accuracy: 98,
    speed: "fast",
    features: ["100+ languages", "Context preservation", "Bulk translation", "Format preservation"],
    useCases: ["International business", "Content localization", "Real-time chat", "Document translation"],
    inputTypes: ["Text"],
    outputTypes: ["Text", "JSON"],
    languages: ["100+ language pairs"],
    isPopular: true,
    apiEndpoint: "/translation/automatic_translation"
  },
  {
    id: "document-translation",
    name: "Document Translation",
    description: "Translate entire documents while preserving formatting and structure",
    category: "Document",
    subcategory: "Translation",
    icon: "FiFileText",
    iconColor: "text-indigo-500",
    provider: "Google, AWS, Microsoft",
    pricing: "paid",
    accuracy: 96,
    speed: "medium",
    features: ["Format preservation", "Layout retention", "Multiple file types", "Batch processing"],
    useCases: ["Legal documents", "Technical manuals", "Marketing materials", "Academic papers"],
    inputTypes: ["PDF", "DOC", "DOCX", "TXT"],
    outputTypes: ["PDF", "DOC", "DOCX"],
    languages: ["50+ language pairs"],
    apiEndpoint: "/translation/document_translation"
  },
  {
    id: "language-detection",
    name: "Language Detection",
    description: "Automatically identify the language of text content with high confidence",
    category: "Text",
    subcategory: "Analysis",
    icon: "FiSearch",
    iconColor: "text-cyan-500",
    provider: "Google, AWS, Azure",
    pricing: "freemium",
    accuracy: 99,
    speed: "fast",
    features: ["100+ languages", "Confidence scoring", "Script detection", "Batch processing"],
    useCases: ["Content routing", "Translation preparation", "Multilingual apps", "Data preprocessing"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["100+ languages supported"],
    isPopular: true,
    apiEndpoint: "/translation/language_detection"
  },

  // ===== VIDEO PROCESSING =====
  {
    id: "video-deepfake-detection",
    name: "Deepfake Detection",
    description: "Detect artificially generated or manipulated video content using advanced AI analysis",
    category: "Video",
    subcategory: "Detection",
    icon: "FiShield",
    iconColor: "text-red-500",
    provider: "Custom, Microsoft, Sensity",
    pricing: "paid",
    accuracy: 92,
    speed: "slow",
    features: ["Real-time analysis", "Confidence scoring", "Frame-by-frame detection", "Metadata analysis"],
    useCases: ["Content verification", "Media authentication", "Social media monitoring", "Security applications"],
    inputTypes: ["MP4", "AVI", "WebM", "MOV"],
    outputTypes: ["JSON"],
    isNew: true,
    apiEndpoint: "/video/deepfake_detection",
    isAsync: true
  },
  {
    id: "video-explicit-content",
    name: "Video Explicit Content Detection",
    description: "Detect inappropriate, adult, or explicit content in video streams and files",
    category: "Video",
    subcategory: "Moderation",
    icon: "FiAlertTriangle",
    iconColor: "text-red-600",
    provider: "Google, AWS, Sightengine",
    pricing: "paid",
    accuracy: 95,
    speed: "medium",
    features: ["Real-time scanning", "Content rating", "Timestamp marking", "Custom thresholds"],
    useCases: ["Platform moderation", "Compliance", "Parental controls", "Content filtering"],
    inputTypes: ["MP4", "AVI", "WebM", "MOV"],
    outputTypes: ["JSON"],
    isPopular: true,
    apiEndpoint: "/video/explicit_content_detection",
    isAsync: true
  },
  {
    id: "video-face-detection",
    name: "Video Face Detection",
    description: "Detect and track faces in video content with temporal consistency",
    category: "Video",
    subcategory: "Detection",
    icon: "FiUser",
    iconColor: "text-blue-500",
    provider: "Google, AWS, Azure",
    pricing: "paid",
    accuracy: 96,
    speed: "medium",
    features: ["Multi-face tracking", "Emotion analysis", "Age estimation", "Face landmarks"],
    useCases: ["Video surveillance", "Audience analysis", "Interactive media", "Security systems"],
    inputTypes: ["MP4", "AVI", "WebM"],
    outputTypes: ["JSON"],
    apiEndpoint: "/video/face_detection",
    isAsync: true
  },
  {
    id: "video-generation",
    name: "Video Generation",
    description: "Generate videos from text prompts or images using advanced AI models",
    category: "Video",
    subcategory: "Generation",
    icon: "FiZap",
    iconColor: "text-purple-600",
    provider: "Runway, Stability AI, Custom",
    pricing: "paid",
    accuracy: 88,
    speed: "slow",
    features: ["Text-to-video", "Image-to-video", "Style control", "Duration control"],
    useCases: ["Content creation", "Marketing videos", "Social media", "Creative projects"],
    inputTypes: ["Text", "Images"],
    outputTypes: ["MP4", "WebM"],
    isNew: true,
    apiEndpoint: "/video/generation",
    isAsync: true
  },
  {
    id: "video-object-tracking",
    name: "Object Tracking",
    description: "Track objects across video frames with advanced computer vision",
    category: "Video",
    subcategory: "Analysis",
    icon: "FiCamera",
    iconColor: "text-green-600",
    provider: "Custom, AWS, Google",
    pricing: "paid",
    accuracy: 91,
    speed: "slow",
    features: ["Multi-object tracking", "Trajectory analysis", "Occlusion handling", "Re-identification"],
    useCases: ["Surveillance", "Sports analysis", "Traffic monitoring", "Behavior analysis"],
    inputTypes: ["MP4", "AVI", "MOV"],
    outputTypes: ["JSON", "CSV"],
    apiEndpoint: "/video/object_tracking",
    isAsync: true
  },
  {
    id: "video-logo-detection",
    name: "Logo Detection",
    description: "Identify and track brand logos in video content for marketing analysis",
    category: "Video",
    subcategory: "Recognition",
    icon: "FiTag",
    iconColor: "text-orange-600",
    provider: "Google, AWS, Custom",
    pricing: "paid",
    accuracy: 89,
    speed: "medium",
    features: ["Brand recognition", "Logo tracking", "Confidence scoring", "Custom logo training"],
    useCases: ["Brand monitoring", "Sponsorship tracking", "Media analysis", "Market research"],
    inputTypes: ["MP4", "AVI", "WebM"],
    outputTypes: ["JSON"],
    apiEndpoint: "/video/logo_detection",
    isAsync: true
  },
  {
    id: "video-question-answering",
    name: "Video Question Answering",
    description: "Answer questions about video content using multimodal AI understanding",
    category: "Video",
    subcategory: "Analysis",
    icon: "FiMessageSquare",
    iconColor: "text-indigo-600",
    provider: "OpenAI, Google, Custom",
    pricing: "paid",
    accuracy: 87,
    speed: "medium",
    features: ["Content understanding", "Visual reasoning", "Temporal analysis", "Multi-language support"],
    useCases: ["Video search", "Content analysis", "Educational tools", "Media intelligence"],
    inputTypes: ["MP4", "AVI", "WebM", "Text"],
    outputTypes: ["Text", "JSON"],
    isNew: true,
    apiEndpoint: "/video/question_answering",
    isAsync: true
  },

  // ===== TEXT PROCESSING =====
  {
    id: "ai-detection-text",
    name: "AI Text Detection",
    description: "Determine whether text content was generated by AI or written by humans",
    category: "Text",
    subcategory: "Detection",
    icon: "FiEye",
    iconColor: "text-purple-600",
    provider: "Custom, OpenAI, Originality",
    pricing: "paid",
    accuracy: 94,
    speed: "fast",
    features: ["Model identification", "Confidence scoring", "Batch processing", "API integration"],
    useCases: ["Content verification", "Academic integrity", "Publishing", "Quality control"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    isNew: true,
    apiEndpoint: "/text/ai_detection"
  },
  {
    id: "text-anonymization",
    name: "Text Anonymization",
    description: "Remove or replace personally identifiable information (PII) from text content",
    category: "Text",
    subcategory: "Privacy",
    icon: "FiLock",
    iconColor: "text-red-500",
    provider: "AWS, Azure, Custom",
    pricing: "paid",
    accuracy: 96,
    speed: "fast",
    features: ["PII detection", "Custom redaction", "Format preservation", "Compliance ready"],
    useCases: ["Data privacy", "GDPR compliance", "Document sanitization", "Legal processing"],
    inputTypes: ["Text"],
    outputTypes: ["Text", "JSON"],
    apiEndpoint: "/text/anonymization"
  },
  {
    id: "chat-generation",
    name: "Chat Generation",
    description: "Generate human-like conversational responses using advanced language models",
    category: "Text",
    subcategory: "Generation",
    icon: "FiMessageSquare",
    iconColor: "text-blue-500",
    provider: "OpenAI, Google, Anthropic, AWS",
    pricing: "paid",
    accuracy: 95,
    speed: "fast",
    features: ["Context awareness", "Multi-turn conversations", "Custom personalities", "Safety filtering"],
    useCases: ["Chatbots", "Virtual assistants", "Customer support", "Creative writing"],
    inputTypes: ["Text"],
    outputTypes: ["Text", "JSON"],
    languages: ["English", "Spanish", "French", "German", "Chinese"],
    isPopular: true,
    apiEndpoint: "/text/chat"
  },
  {
    id: "code-generation",
    name: "Code Generation",
    description: "Generate high-quality code from natural language descriptions",
    category: "Text",
    subcategory: "Code",
    icon: "FiCode",
    iconColor: "text-green-500",
    provider: "OpenAI, Google, Anthropic",
    pricing: "paid",
    accuracy: 92,
    speed: "fast",
    features: ["Multi-language support", "Code explanation", "Bug fixing", "Code completion"],
    useCases: ["Software development", "Code assistance", "Learning", "Automation"],
    inputTypes: ["Text"],
    outputTypes: ["Code", "JSON"],
    languages: ["Python", "JavaScript", "Java", "C++", "Go", "Rust"],
    isPopular: true,
    apiEndpoint: "/text/code_generation"
  },
  {
    id: "text-embeddings",
    name: "Text Embeddings",
    description: "Convert text into high-dimensional vectors for semantic search and analysis",
    category: "Text",
    subcategory: "Analysis",
    icon: "FiGrid",
    iconColor: "text-cyan-500",
    provider: "OpenAI, Google, Cohere, AWS",
    pricing: "paid",
    accuracy: 96,
    speed: "fast",
    features: ["Semantic similarity", "Clustering", "Classification", "Search optimization"],
    useCases: ["Semantic search", "Recommendation systems", "Content clustering", "Similarity analysis"],
    inputTypes: ["Text"],
    outputTypes: ["Vector", "JSON"],
    apiEndpoint: "/text/embeddings"
  },
  {
    id: "emotion-detection",
    name: "Emotion Detection",
    description: "Analyze emotional tone and sentiment in text with detailed emotion classification",
    category: "Text",
    subcategory: "Analysis",
    icon: "FiHeart",
    iconColor: "text-pink-500",
    provider: "Google, AWS, IBM Watson",
    pricing: "paid",
    accuracy: 91,
    speed: "fast",
    features: ["Multi-emotion detection", "Confidence scoring", "Intensity levels", "Cultural context"],
    useCases: ["Social media monitoring", "Customer feedback", "Mental health", "Brand analysis"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["English", "Spanish", "French", "German"],
    isPopular: true,
    apiEndpoint: "/text/emotion_detection"
  },
  {
    id: "sentiment-analysis",
    name: "Sentiment Analysis",
    description: "Analyze the sentiment and emotional tone of text content",
    category: "Text",
    subcategory: "Analysis",
    icon: "FiTrendingUp",
    iconColor: "text-green-600",
    provider: "Google, AWS, Azure, IBM",
    pricing: "freemium",
    accuracy: 94,
    speed: "fast",
    features: ["Positive/negative/neutral", "Confidence scoring", "Aspect-based analysis", "Batch processing"],
    useCases: ["Social media monitoring", "Customer reviews", "Brand monitoring", "Market research"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["English", "Spanish", "French", "German", "Italian"],
    isPopular: true,
    apiEndpoint: "/text/sentiment_analysis"
  },
  {
    id: "keyword-extraction",
    name: "Keyword Extraction",
    description: "Extract important keywords and key phrases from text content",
    category: "Text",
    subcategory: "Extraction",
    icon: "FiTag",
    iconColor: "text-orange-500",
    provider: "Google, AWS, IBM Watson",
    pricing: "paid",
    accuracy: 88,
    speed: "fast",
    features: ["TF-IDF analysis", "Phrase extraction", "Importance scoring", "Topic modeling"],
    useCases: ["SEO optimization", "Content analysis", "Document summarization", "Search indexing"],
    inputTypes: ["Text"],
    outputTypes: ["JSON", "CSV"],
    apiEndpoint: "/text/keyword_extraction"
  },
  {
    id: "text-moderation",
    name: "Text Moderation",
    description: "Detect and filter inappropriate, toxic, or harmful text content",
    category: "Text",
    subcategory: "Moderation",
    icon: "FiShield",
    iconColor: "text-red-600",
    provider: "Google, AWS, Perspective API",
    pricing: "paid",
    accuracy: 93,
    speed: "fast",
    features: ["Toxicity detection", "Hate speech filtering", "Custom categories", "Severity scoring"],
    useCases: ["Content moderation", "Community management", "Platform safety", "Compliance"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["English", "Spanish", "French", "German"],
    apiEndpoint: "/text/moderation"
  },
  {
    id: "named-entity-recognition",
    name: "Named Entity Recognition",
    description: "Identify and classify named entities in text (persons, organizations, locations)",
    category: "Text",
    subcategory: "Extraction",
    icon: "FiMapPin",
    iconColor: "text-blue-600",
    provider: "Google, AWS, Azure, spaCy",
    pricing: "paid",
    accuracy: 95,
    speed: "fast",
    features: ["Person identification", "Organization extraction", "Location detection", "Custom entities"],
    useCases: ["Information extraction", "Knowledge graphs", "Content categorization", "Data mining"],
    inputTypes: ["Text"],
    outputTypes: ["JSON"],
    languages: ["English", "Spanish", "French", "German", "Chinese"],
    isPopular: true,
    apiEndpoint: "/text/named_entity_recognition"
  },
  {
    id: "text-summarization",
    name: "Text Summarization",
    description: "Generate concise summaries of long text documents and articles",
    category: "Text",
    subcategory: "Generation",
    icon: "FiEdit3",
    iconColor: "text-purple-500",
    provider: "OpenAI, Cohere, Hugging Face",
    pricing: "paid",
    accuracy: 91,
    speed: "medium",
    features: ["Extractive summarization", "Abstractive summarization", "Length control", "Key points extraction"],
    useCases: ["Document analysis", "News aggregation", "Research papers", "Content curation"],
    inputTypes: ["Text", "PDF"],
    outputTypes: ["Text", "JSON"],
    isPopular: true,
    apiEndpoint: "/text/summarization"
  },

  // ===== IMAGE PROCESSING =====
  {
    id: "image-ai-detection",
    name: "AI Image Detection",
    description: "Determine whether an image was generated by AI or is a natural photograph",
    category: "Image",
    subcategory: "Detection",
    icon: "FiEye",
    iconColor: "text-purple-600",
    provider: "Custom, Hive AI, Sensity",
    pricing: "paid",
    accuracy: 94,
    speed: "fast",
    features: ["AI vs Real detection", "Model identification", "Confidence scoring", "Batch processing"],
    useCases: ["Content verification", "Media authentication", "Quality control", "Trust & safety"],
    inputTypes: ["JPG", "PNG", "WebP", "TIFF"],
    outputTypes: ["JSON"],
    isNew: true,
    apiEndpoint: "/image/ai_detection"
  },
  {
    id: "image-explicit-content",
    name: "Explicit Content Detection",
    description: "Detect adult content, nudity, and inappropriate material in images",
    category: "Image",
    subcategory: "Moderation",
    icon: "FiShield",
    iconColor: "text-red-600",
    provider: "Google, AWS, Sightengine",
    pricing: "paid",
    accuracy: 97,
    speed: "fast",
    features: ["NSFW detection", "Violence detection", "Drug content", "Weapon identification"],
    useCases: ["Content moderation", "Platform safety", "Parental controls", "Compliance"],
    inputTypes: ["JPG", "PNG", "WebP", "TIFF"],
    outputTypes: ["JSON"],
    isPopular: true,
    apiEndpoint: "/image/explicit_content_detection"
  },
  {
    id: "background-removal",
    name: "Background Removal",
    description: "Remove backgrounds from images automatically with AI precision",
    category: "Image",
    subcategory: "Editing",
    icon: "FiShuffle",
    iconColor: "text-green-500",
    provider: "Remove.bg, Clipdrop, Custom",
    pricing: "freemium",
    accuracy: 95,
    speed: "fast",
    features: ["Automatic removal", "Hair detail preservation", "Transparent output", "Batch processing"],
    useCases: ["E-commerce", "Profile photos", "Marketing materials", "Photo editing"],
    inputTypes: ["JPG", "PNG", "WebP"],
    outputTypes: ["PNG"],
    isPopular: true,
    apiEndpoint: "/image/background_removal"
  },
  {
    id: "face-recognition",
    name: "Face Recognition",
    description: "Identify and verify specific individuals by comparing facial features",
    category: "Image",
    subcategory: "Recognition",
    icon: "FiUser",
    iconColor: "text-blue-500",
    provider: "AWS, Azure, Custom",
    pricing: "paid",
    accuracy: 99,
    speed: "fast",
    features: ["1:1 verification", "1:N identification", "Liveness detection", "Anti-spoofing"],
    useCases: ["Access control", "Identity verification", "Security systems", "User authentication"],
    inputTypes: ["JPG", "PNG", "WebP"],
    outputTypes: ["JSON"],
    apiEndpoint: "/image/face_recognition"
  },
  {
    id: "image-generation",
    name: "Image Generation",
    description: "Generate high-quality images from text descriptions using AI models",
    category: "Image",
    subcategory: "Generation",
    icon: "FiZap",
    iconColor: "text-yellow-500",
    provider: "OpenAI, Stability AI, Midjourney",
    pricing: "paid",
    accuracy: 90,
    speed: "medium",
    features: ["Text-to-image", "Style control", "High resolution", "Multiple variants"],
    useCases: ["Creative design", "Marketing content", "Art generation", "Concept visualization"],
    inputTypes: ["Text"],
    outputTypes: ["JPG", "PNG"],
    isPopular: true,
    apiEndpoint: "/image/generation"
  },
  {
    id: "object-detection",
    name: "Object Detection",
    description: "Detect and classify objects in images with bounding boxes and labels",
    category: "Image",
    subcategory: "Detection",
    icon: "FiCamera",
    iconColor: "text-red-500",
    provider: "Google, AWS, YOLO",
    pricing: "paid",
    accuracy: 92,
    speed: "fast",
    features: ["80+ object classes", "Bounding boxes", "Confidence scores", "Custom objects"],
    useCases: ["Autonomous vehicles", "Retail analysis", "Security monitoring", "Content analysis"],
    inputTypes: ["JPG", "PNG", "WebP", "TIFF"],
    outputTypes: ["JSON"],
    isPopular: true,
    apiEndpoint: "/image/object_detection"
  },
  {
    id: "logo-detection",
    name: "Logo Detection",
    description: "Identify and locate brand logos in images for marketing analysis",
    category: "Image",
    subcategory: "Recognition",
    icon: "FiTag",
    iconColor: "text-orange-600",
    provider: "Google, AWS, Custom",
    pricing: "paid",
    accuracy: 89,
    speed: "fast",
    features: ["Brand recognition", "Logo localization", "Confidence scoring", "Custom logo training"],
    useCases: ["Brand monitoring", "Sponsorship tracking", "Media analysis", "Market research"],
    inputTypes: ["JPG", "PNG", "WebP"],
    outputTypes: ["JSON"],
    apiEndpoint: "/image/logo_detection"
  },
  {
    id: "image-search",
    name: "Image Search",
    description: "Find similar images using visual similarity and content-based search",
    category: "Image",
    subcategory: "Search",
    icon: "FiSearch",
    iconColor: "text-cyan-500",
    provider: "Google, AWS, Custom",
    pricing: "paid",
    accuracy: 87,
    speed: "fast",
    features: ["Visual similarity", "Reverse image search", "Content matching", "Custom datasets"],
    useCases: ["E-commerce search", "Copyright detection", "Product matching", "Visual discovery"],
    inputTypes: ["JPG", "PNG", "WebP"],
    outputTypes: ["JSON"],
    apiEndpoint: "/image/search"
  },

  // ===== OCR & DOCUMENT PROCESSING =====
  {
    id: "document-parsing",
    name: "Document Parsing",
    description: "Extract structured data from various document formats with high accuracy",
    category: "Document",
    subcategory: "Parsing",
    icon: "FiFileText",
    iconColor: "text-blue-500",
    provider: "Google, AWS, Azure, Mindee",
    pricing: "paid",
    accuracy: 96,
    speed: "medium",
    features: ["Multi-format support", "Table extraction", "Form parsing", "Layout analysis"],
    useCases: ["Invoice processing", "Contract analysis", "Form digitization", "Data extraction"],
    inputTypes: ["PDF", "DOC", "DOCX", "Images"],
    outputTypes: ["JSON", "XML", "CSV"],
    isPopular: true,
    apiEndpoint: "/ocr/document_parsing"
  },
  {
    id: "financial-parser",
    name: "Financial Document Parser",
    description: "Specialized parsing for financial documents like invoices, receipts, and statements",
    category: "Document",
    subcategory: "Financial",
    icon: "FiTrendingUp",
    iconColor: "text-green-600",
    provider: "Mindee, AWS, Custom",
    pricing: "paid",
    accuracy: 98,
    speed: "fast",
    features: ["Invoice parsing", "Receipt analysis", "Tax document processing", "Line item extraction"],
    useCases: ["Expense management", "Accounting automation", "Tax preparation", "Financial analysis"],
    inputTypes: ["PDF", "JPG", "PNG"],
    outputTypes: ["JSON", "CSV"],
    isPopular: true,
    apiEndpoint: "/ocr/financial_parser"
  },
  {
    id: "identity-parser",
    name: "Identity Document Parser",
    description: "Extract information from identity documents, passports, and driver licenses",
    category: "Document",
    subcategory: "Identity",
    icon: "FiUser",
    iconColor: "text-purple-500",
    provider: "Mindee, AWS, Azure",
    pricing: "paid",
    accuracy: 97,
    speed: "fast",
    features: ["ID verification", "Passport parsing", "Driver license extraction", "Fraud detection"],
    useCases: ["KYC verification", "User onboarding", "Identity verification", "Document validation"],
    inputTypes: ["JPG", "PNG", "PDF"],
    outputTypes: ["JSON", "XML"],
    apiEndpoint: "/ocr/identity_parser"
  },
  {
    id: "resume-parser",
    name: "Resume Parser",
    description: "Extract structured information from resumes and CVs for HR automation",
    category: "Document",
    subcategory: "HR",
    icon: "FiUser",
    iconColor: "text-indigo-500",
    provider: "Custom, AWS, Sovren",
    pricing: "paid",
    accuracy: 94,
    speed: "fast",
    features: ["Contact extraction", "Skills parsing", "Experience analysis", "Education details"],
    useCases: ["HR automation", "Recruitment", "Talent acquisition", "CV screening"],
    inputTypes: ["PDF", "DOC", "DOCX"],
    outputTypes: ["JSON"],
    apiEndpoint: "/ocr/resume_parser"
  },
  {
    id: "bank-check-parsing",
    name: "Bank Check Parser",
    description: "Extract routing numbers, account details, and amounts from bank checks",
    category: "Document",
    subcategory: "Financial",
    icon: "FiCheckCircle",
    iconColor: "text-blue-600",
    provider: "Mindee, Custom",
    pricing: "paid",
    accuracy: 99,
    speed: "fast",
    features: ["MICR reading", "Amount extraction", "Bank details", "Signature detection"],
    useCases: ["Check processing", "Banking automation", "Payment verification", "Financial services"],
    inputTypes: ["JPG", "PNG", "PDF"],
    outputTypes: ["JSON"],
    apiEndpoint: "/ocr/bank_check_parsing"
  },

  // ===== BATCH PROCESSING =====
  {
    id: "batch-processing",
    name: "Batch Processing",
    description: "Process multiple files or requests in bulk with efficient job management",
    category: "Utility",
    subcategory: "Processing",
    icon: "FiRefreshCw",
    iconColor: "text-gray-600",
    provider: "EdenAI Platform",
    pricing: "paid",
    accuracy: 95,
    speed: "medium",
    features: ["Bulk processing", "Job queuing", "Progress tracking", "Result aggregation"],
    useCases: ["Large dataset processing", "Bulk document analysis", "Mass content moderation", "Data migration"],
    inputTypes: ["Multiple formats"],
    outputTypes: ["JSON", "CSV", "ZIP"],
    apiEndpoint: "/batch",
    isAsync: true
  }
];

// Category groupings for better organization
export const categoryGroups = {
  "Trading": {
    name: "Trading & Finance",
    icon: "FiTrendingUp",
    iconColor: "text-green-600",
    description: "Real-time market analysis and trading tools",
    subcategories: ["Analysis", "Portfolio", "Signals", "Risk"]
  },
  "Document": {
    name: "Document Processing",
    icon: "FiFileText",
    iconColor: "text-blue-500",
    description: "Extract, parse, and analyze documents",
    subcategories: ["Parsing", "OCR", "Financial", "HR", "Identity", "Translation", "Resume"]
  },
  "Text": {
    name: "Text Analysis",
    icon: "FiType",
    iconColor: "text-green-500",
    description: "Process and understand text content",
    subcategories: ["Analysis", "Generation", "Translation", "Chatbot", "Code", "Detection", "Privacy", "Extraction", "Moderation", "NLP"]
  },
  "Image": {
    name: "Image Processing",
    icon: "FiImage",
    iconColor: "text-purple-500",
    description: "Analyze, edit, and generate images",
    subcategories: ["Detection", "Recognition", "Editing", "Generation", "Moderation", "Search", "Processing"]
  },
  "Audio": {
    name: "Audio Processing",
    icon: "FiMic",
    iconColor: "text-orange-500",
    description: "Convert and analyze audio content",
    subcategories: ["Transcription", "Generation", "Synthesis"]
  },
  "Video": {
    name: "Video Analysis",
    icon: "FiVideo",
    iconColor: "text-red-500",
    description: "Process and understand video content",
    subcategories: ["Analysis", "Detection", "Moderation", "Recognition", "Generation"]
  },
  "Utility": {
    name: "Utility Services",
    icon: "FiGrid",
    iconColor: "text-gray-500",
    description: "Platform utilities and batch processing",
    subcategories: ["Processing", "Management"]
  }
};

// Popular tools for featured section
export const popularTools = edenAITools.filter(tool => tool.isPopular);

// New tools for highlighting
export const newTools = edenAITools.filter(tool => tool.isNew);

// Async tools that require job processing
export const asyncTools = edenAITools.filter(tool => tool.isAsync);

// Tools by provider for filtering
export const toolsByProvider = edenAITools.reduce((acc, tool) => {
  const providers = tool.provider.split(',').map(p => p.trim());
  providers.forEach(provider => {
    if (!acc[provider]) acc[provider] = [];
    acc[provider].push(tool);
  });
  return acc;
}, {} as Record<string, EdenAITool[]>);